# copied to /etc/nginx/docker/conf.d
# which connected as volume with docker-compose.nginx.yml

map $http_user_agent $log_ua {
        ~GoogleHC 0;
        default 1;
}

server {
        listen 443 ssl;
        listen [::]:443 ssl;

        gzip on;

        server_name ehc.qa.slb.com;

        ssl_password_file   /certs/ssl.pass;
        ssl_certificate     /certs/certnew.cer;
        ssl_certificate_key /certs/server.key;
        
        ssl_protocols TLSv1.2;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header Cache-Control "no-cache";
        add_header X-Content-Type-Options "nosniff";
        #add_header Content-Security-Policy "default-src 'self'; ";
        add_header Strict-Transport-Security "max-age=3156000; includeSubDomains" always;
        expires -1;

        location /rss {
          alias /usr/share/nginx/html;
          index rss.json;
        }

        location / {
          proxy_pass http://chronograf:8888;
        }
        access_log /var/log/nginx/access.log main if=$log_ua;

}

server {
        listen 443 ssl;
        listen [::]:443 ssl;

      ## To Enable compression
      gzip on;
	    gzip_comp_level 2;
	    gzip_http_version 1.0;
	    gzip_proxied any;
	    gzip_min_length 1100;
	    gzip_buffers 16 8k;
	    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;

	    # Disable for IE < 6 because there are some known problems
	    gzip_disable "MSIE [1-6].(?!.*SV1)";

	    # Add a vary header for downstream proxies to avoid sending cached gzipped files to IE6
	    gzip_vary on; 

        server_name api.ehc.qa.slb.com;

        ssl_password_file   /certs/ssl.pass;
        ssl_certificate     /certs/certnew.cer;
        ssl_certificate_key /certs/server.key;
        
        ssl_protocols TLSv1.2;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header Cache-Control "no-cache";
        add_header X-Content-Type-Options "nosniff";
        #add_header Content-Security-Policy "default-src 'self'; ";
        add_header Strict-Transport-Security "max-age=3156000; includeSubDomains" always;
        expires -1;
        # set client body size to 30M #
        client_max_body_size 30M;

        # This is added for EHC V1 API's
        location /v1/ {
          proxy_pass http://conf_api.historian.deadletter_1/;
        }


        location /v2/ {

          # OPTIONS (pre-flight) request from allowed
          # CORS domain. return response directly
           if ($request_method ~* "(GET|POST|DELETE)") {
            add_header "Access-Control-Allow-Origin"  * always;
          }
          if ($request_method = "OPTIONS") {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers Origin,Content-Type,Accept,Location,authorization,cache-control,expires,pragma;
            add_header Access-Control-Expose-Headers Location;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
           }
          
          proxy_pass http://ehc.api.web/v2/;
        }
		
		location /admin/v2/ {

          # OPTIONS (pre-flight) request from allowed
          # CORS domain. return response directly
          if ($request_method ~* "(GET|POST)") {
            add_header "Access-Control-Allow-Origin"  * always;
          }
          if ($request_method = "OPTIONS") {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers Origin,Content-Type,Accept,Location,authorization,cache-control,expires,pragma;
            add_header Access-Control-Expose-Headers Location;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
           }
          
          proxy_pass http://ehc.admin.api.web/admin/v2/;
        }


        location /v2/health {
          proxy_pass http://ehc.api.web/health;
        }


        location /x2/ {

          # OPTIONS (pre-flight) request from allowed
          # CORS domain. return response directly
          if ($request_method ~* "(GET|POST)") {
            add_header "Access-Control-Allow-Origin"  *;
          }
          if ($request_method = "OPTIONS") {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers Origin,Content-Type,Accept,Location,authorization,cache-control,expires,pragma;
            add_header Access-Control-Expose-Headers Location;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
           }
          
          proxy_pass http://ehcapix2/x2/;
        }

        location /influx-db/ {
          # influx api adds cors headers on its own
          
          proxy_pass http://influx_db:8086/;
        }
        
		location /kt-test {
			add_header Content-Type text/plain;
			return 200 'this is KTA';
		}
		
        access_log /var/log/nginx/access.log main if=$log_ua;
}